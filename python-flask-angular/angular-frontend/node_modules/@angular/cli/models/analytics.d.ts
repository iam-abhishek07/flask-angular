
import { analytics } from '@angular-devkit/core';
export declare const AnalyticsProperties: {
    AngularCliProd: string;
    AngularCliStaging: string;
    readonly AngularCliDefault: string;
};

export declare const analyticsPackageSafelist: (string | RegExp)[];
export declare function isPackageNameSafeForAnalytics(name: string): boolean;

export declare class UniversalAnalytics implements analytics.Analytics {
    private _ua;
    private _dirty;
    private _metrics;
    private _dimensions;
   
    constructor(trackingId: string, uid: string);
    
    private _customVariables;
    event(ec: string, ea: string, options?: analytics.EventOptions): void;
    screenview(cd: string, an: string, options?: analytics.ScreenviewOptions): void;
    pageview(dp: string, options?: analytics.PageviewOptions): void;
    timing(utc: string, utv: string, utt: string | number, options?: analytics.TimingOptions): void;
    flush(): Promise<void>;
}

export declare function setAnalyticsConfig(level: 'global' | 'local', value: string | boolean): void;

export declare function promptGlobalAnalytics(force?: boolean): Promise<boolean>;

export declare function promptProjectAnalytics(force?: boolean): Promise<boolean>;
export declare function hasGlobalAnalyticsConfiguration(): Promise<boolean>;

export declare function getGlobalAnalytics(): Promise<UniversalAnalytics | undefined>;
export declare function hasWorkspaceAnalyticsConfiguration(): Promise<boolean>;

export declare function getWorkspaceAnalytics(): Promise<UniversalAnalytics | undefined>;

export declare function getSharedAnalytics(): Promise<UniversalAnalytics | undefined>;
