export interface Schema {
    $schema?: string;
    cli?: CliOptions;
    
    defaultProject?: string;
   
    newProjectRoot?: string;
    projects?: Projects;
    schematics?: SchematicOptions;
    version: number;
}
export interface CliOptions {
    
    analytics?: Analytics;
    
    defaultCollection?: string;
    
    packageManager?: PackageManager;
    
    warnings?: Warnings;
}

export declare type Analytics = boolean | string;

export declare enum PackageManager {
    Cnpm = "cnpm",
    Npm = "npm",
    Pnpm = "pnpm",
    Yarn = "yarn"
}

export interface Warnings {
    
    versionMismatch?: boolean;
}
export interface Projects {
}
export interface SchematicOptions {
    "@schematics/angular:class"?: SchematicsAngularClass;
    "@schematics/angular:component"?: SchematicsAngularComponent;
    "@schematics/angular:directive"?: SchematicsAngularDirective;
    "@schematics/angular:module"?: SchematicsAngularModule;
    "@schematics/angular:pipe"?: SchematicsAngularPipe;
    "@schematics/angular:service"?: SchematicsAngularService;
}
export interface SchematicsAngularClass {
    
    skipTests?: boolean;
}
export interface SchematicsAngularComponent {
    
    changeDetection?: ChangeDetection;
    
    displayBlock?: boolean;
    
    entryComponent?: boolean;
    
    export?: boolean;
    
    flat?: boolean;
    
    inlineStyle?: boolean;
    
    inlineTemplate?: boolean;
    
    module?: string;
    
    prefix?: string;
   
    selector?: string;
    
    skipImport?: boolean;
    
    skipTests?: boolean;
    
    style?: Style;
    
    viewEncapsulation?: ViewEncapsulation;
}

export declare enum ChangeDetection {
    Default = "Default",
    OnPush = "OnPush"
}

export declare enum Style {
    Css = "css",
    Less = "less",
    Sass = "sass",
    Scss = "scss",
    Styl = "styl"
}

export declare enum ViewEncapsulation {
    Emulated = "Emulated",
    Native = "Native",
    None = "None",
    ShadowDom = "ShadowDom"
}
export interface SchematicsAngularDirective {
   
    export?: boolean;
    
    flat?: boolean;
    
    module?: string;
    
    prefix?: string;
    
    selector?: string;
   
    skipImport?: boolean;
    
    skipTests?: boolean;
}
export interface SchematicsAngularModule {
    
    commonModule?: boolean;
    
    flat?: boolean;
    
    module?: string;
    
    routing?: boolean;
    
    routingScope?: RoutingScope;
}

export declare enum RoutingScope {
    Child = "Child",
    Root = "Root"
}
export interface SchematicsAngularPipe {
    
    export?: boolean;
    
    flat?: boolean;
    
    module?: string;
    
    skipImport?: boolean;
    
    skipTests?: boolean;
}
export interface SchematicsAngularService {
    
    flat?: boolean;
    
    skipTests?: boolean;
}
